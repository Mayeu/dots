#!/usr/bin/env bash

# A make wrapper
#
# Tested with GNU Make.
#
# Features
# - Try to find a Makefile 5 level up
#
# Maybe one day
# - subcommand via target name convention
# - easier argument passing when using the Makefile
# - search for Makefile until the home folder

set -euo pipefail
IFS=$'\n\t'

find-real-make() {

	if test -f "$MAKE_PATH"; then
		echo "$MAKE_PATH"
	else
		# 1. whereis lists all the command that match `make`. Does not work well
		#    with brew
		# 2. The grep command filter out any entry that match our path
		# 3. We only keep the first element of the list
		whereis make | grep -v "$0" | head -n1
	fi
}

# Dirty but easy
find-makefile() {
	if test -f Makefile; then
		realpath Makefile
	elif test -f ../Makefile; then
		realpath ../Makefile
	elif test -f ../../Makefile; then
		realpath ../../Makefile
	elif test -f ../../../Makefile; then
		realpath ../../../Makefile
	elif test -f ../../../../Makefile; then
		realpath ../../../../Makefile
	else
		echo "No Makefile around" >&2
		exit 1
	fi
}

makefile() {
	find-makefile
}

list-target() {
	local makepath="$1"
	grep "^\w" "$makepath" | grep : | grep -v = | grep -v "^\." | cut -f 1 -d:
}

launch-make() {
	"$(find-real-make)" -C "$(dirname "$(find-makefile)")" "$@"
}

makew() {
	launch-make "$@"
}

makew "$@"

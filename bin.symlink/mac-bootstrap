#! /usr/bin/env bash
#set -e
set -u

#echo "👥 Create a group for me, myslef, and I"
#MY_GROUP=me_myself_and_i
## -q = no interaction
## -o = operation to do
## -a = record to add
## -t = type of the record
#sudo dseditgroup -q -o create "$MY_GROUP"
#sudo dseditgroup -o edit -a m -t user "$MY_GROUP"

# Setup the configuration share
SETTING_SHARE="/Volumes/Shared Settings"
echo "⚒  Give read/write access to me, myself, and I to the setting share"
sudo chown -R m:"$MY_GROUP" "$SETTING_SHARE"
sudo chmod -R +a "group:${MY_GROUP} allow list,add_file,search,add_subdirectory,delete_child,readattr,writeattr,readextattr,writeextattr,readsecurity,file_inherit,directory_inherit" "$SETTING_SHARE"

#/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
echo "👁  Turn off homebrew analytics"
brew analytics off
export HOMEBREW_NO_ANALYTICS=1

echo "🍺 Configure Homebrew to be shared with me, myself, and I"
fix-homebrew-right

echo "🍺 Install Cask apps"
brew install --cask \
	iterm2 \
	firefox \
	omnifocus \
	blockblock \
	carbon-copy-cloner \
	little-snitch \
	syncthing-app \
	alfred \
	macpass \
	macfuse \
	signal \
	daisydisk \
	docker \
	spotify \
	calibre \
	virtualbox \
	virtualbox-extension-pack \
	appcleaner \
	zoom \
	tor-browser \
	superduper \
	transmission \
	transmission-remote-gui \
	protonvpn \
	vlc \
	setapp \
	imageoptim \
	xld \
	chromium \
	handbrake \
	programmer-dvorak \
	java \
	mailmate \
	kobo \
	font-firacode-nerd-font \
	google-chrome \
	gitup \
	macvim \
	beaker-browser \
	brave-browser \
	notion \
	mumble \
	anki \
	force-paste \
	drawio \
	vcv-rack \
	discord \
	the-unarchiver \
	kodi \
	darktable
#vscodium \
#electrum \
#stellarium \
#phd2
#nightowl \
#font-fira-code \
#postman \
#contexts \
#sublime-merge \
#flotato \
#go64 \
#typora \
#karabiner-elements \
#flux \
#evernote \
#dash \
#patchwork \
#now \
#libreoffice \
#steam \
#mattermost \
#ocenaudio \

#echo "👁 Disagle gcloud cli reporting"
#gcloud config set disable_usage_reporting false

echo "🍺 Install cli apps"
brew install \
	ext4fuse \
	ansible \
	homebrew/cask-fonts/font-fira-code \
	imageoptim-cli \
	selecta \
	borgmatic \
	beancount \
	mayeu/tap/beancount-scripts \
	fava \
	mayeu/tap/run-one \
	mayeu/tap/flock \
	mayeu/tap/habitica-cli \
	mayeu/tap/lmt \
	pinentry-mac \
	hardlink-osx \
	libnettle \
	telnet \
	adr-tools \
	gawk \
	pyenv-virtualenvwrapper \
	editorconfig \
	siril
#node \
#nvm \
#gromgit/fuse/sshfs \
#vagrant-completion \
#sshrc \
#terminal-notifier \
#vault \
#hugo \
#bindfs \
#zsh-completion \
#testssl \
#topgrade \

## To use pinentry-mac it must be added as "pinentry-program" in the
# `~/.gnupg/gpg-agent.conf` configuration

## This is to give root right to the hyperkit driver of docker
echo "🐳 Give some root right to the hyperkit docker driver"
sudo chown root:wheel /usr/local/opt/docker-machine-driver-hyperkit/bin/docker-machine-driver-hyperkit
sudo chmod u+s /usr/local/opt/docker-machine-driver-hyperkit/bin/docker-machine-driver-hyperkit

# Make sure dvp is my login keyboard
echo "⌨️  Update my login keyboard"
sudo cp ~/Library/Preferences/com.apple.HIToolbox.plist /Library/Preferences/

## Install a fish package manager
## Install bass https://github.com/edc/bass
## Configure nvm to use bass
## Check awesome fish https://github.com/jorgebucaran/awesome-fish-shell
## Check awesome cli app https://github.com/agarrharr/awesome-cli-apps#macos

# Setup my dots
echo "🔗 Link my dotfiles"
make link

## Setup my shell to be homebrew zsh
#echo "🐚 Setup my shell to homebrew zsh"
#export zshpath="$(brew --prefix)/bin/zsh"
#grep -q "^${zshpath}" /etc/shells || sudo -E sh -c "echo '$zshpath' >> /etc/shells"
#chsh -s "$zshpath"

## setup ZSH
#echo "🐚 Setup zsh"
## Force rebuilding of autocompletion
#rm -f ~/.zcompdump
#compinit

## iterm2 configuration
#echo "🐚 Configure iterm2 to sync preferences"
## Use a custom folder for the preferences
#defaults write com.googlecode.iterm2 PrefsCustomFolder "/Volumes/Shared Settings/iterm2"
## Load preferences from a custom folder
#defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder 1
## Save config on the custom folder when quitting
#defaults write com.googlecode.iterm2 "NoSyncNeverRemindPrefsChangesLostForFile_selection" 0
#
## Alfred Configuration
#echo "🤵 Configure Alfred to share settings"
## Use a sync folder
#defaults write com.runningwithcrayons.Alfred-Preferences syncfolder "/Volumes/Shared Settings/alfred"

# MailMate configuration
echo "📧 Configure mailmate"
defaults write com.freron.MailMate MmAutomaticallyExpandThreadsEnabled -bool YES
defaults write com.freron.MailMate MmAutomaticallyExpandOnlyWhenCounted -bool YES

# The first one makes MailMate always expand all threads. Combined with the
# second one, only threads with emails “counted” are expanded. That might seem
# strange, but it means that if you have a mailbox with an unread count in the
# mailbox list then only threads with unread messages are going to be expanded
# (or the parts of the threads with unread messages). New messages also trigger
# auto-expansion. (Note: It might be changed how this works. In particular,
# these features could be more independent of each other.)

echo "🔍 Activate the locate database"
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist
